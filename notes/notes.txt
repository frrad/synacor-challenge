1043:self-test complete, all tests pass

# call_repeatedly
1460:input starts at (reg0) len, i,n,p,u,t,...
1466:end save registers
1480:while
1488:return safely
1504:end while
1507:restore registers
1515: return (_,count)

#
1547:if input len 0
1550:return -1
1555:if(count) return -1
1561:return safely
1563:return -1
1566:return safely
1570:return 


1609:return (0,y,z)
1612:(1,y,y)
1615:return (1,-1,y)

#1619
1621:(a,b,c,c+1)
1625:(a,b,c,a+c+1)
1629:(a,b,c,rmem(a+c+1))
1632:(a,b,c,a=rmem(a+c+1))
1636:if a=rmem(a+c+1) return noop
1639:(a,b,b,a=rmem(a+c+1))
1642:(a,-1,b,a=rmem(a+c+1))
1647:returns (a,-1,b) if a!=rmem(a+c+1) else nothing

#1648
1650:(a,c,c)

# 1667
# if rmem(a)!=rmem(b) return 0
# if rmem(a)=rmem(b)=0 return 1
# 
1675:(a,b,c,rmem(a),e)
1678:(a,b,c,rmem(a),rmem(b))
1681:(a,b,rmem(a)=rmem(b),rmem(a),rmem(b))
1685:if rmem(a)!=rmem(b) return 0
1688:(a,b,rmem(a)|rmem(b),rmem(a),rmem(b))
1692:if rmem(a)=rmem(b)=0 return 1
1695:(a,b,b,rmem(a),rmem(b))
1698:(a,1619,b,rmem(a),rmem(b))
1706:return 1
1711:return 0


# user_input
1769:output starts at (reg1) len, o,u,t,p,u,t,...
1775:end save registers
1800:is input a newline?
1804:if so, jump
1807:store user input
1819:was last input char a newline?
1823:if so, jump
1830:restore registers

# 1841
1847:(a,b,c,d,e,  f,g)
1849:(a,b,c,d,e,  f,1)
1852:(a,b,c,d,d+1,f,1)
1856:(a,b,c,d,rmem(d+1),f,1)


#XOR
2129:(x,y,x&y)
2133:(x,y,~(x&y))
2136:(x|y,y,~(x&y))
2140:((x|y) & ~(x&y),y,~(x&y))

#
2252:return safely
2255:-1
2259:16384 = 1<<15
2267:if top bit unset, continue
2276:return safely



# two_x_plus_1_max_14(input)
2283:if input <=14 return 2*input+1. otherwise return MAX_INT. in place.
2287:return MAX_INT
2296:return safely
2299:-1
2312:restore registers
2309:MAX_INT

2317:"Foothills"
2318:description
2319:exit name vector
2320:exit ptr vector
2322:"Foothills"
2327:"Dark cave"
2332:"Dark cave"
2337:"Dark cave"
2342:"Rope bridge"
2347:"Falling through the air!"
2352:"Moss cavern"
2357:"Moss cavern"
2362:"Moss cavern"
2367:"Passage"
2372:"Passage"
2377:"Twisty passages"
2382:"Twisty passages"
2387:"Twisty passages"
2392:"Twisty passages"
2397:"Twisty passages"
2402:"Twisty passages"
2407:"Twisty passages"
2412:"Twisty passages"
2422:"Twisty passages"
2427:"Dark passage"
2432:"Dark passage"
2437:"Dark passage"
2442:"Dark passage"
2447:"Ruins"
2452:"Ruins"
2457:"Ruins"
2463:"Ruins"
2468:"Ruins"
2473:"Ruins"
2478:"Ruins"
2483:"Ruins"



2732:pointer to current location

2668:"tablet"
2669:tablet description
2670:tablet location?
2672:"empty lantern"
2673:empty lantern description
2676:"lantern"
2680:"lit lantern"
2684:"can"
2688:"red coin"
2692:"corroded coin"
2696:"shiny coin"
2697:shiny coin description
2700:"concave coin"
2704:"blue coin"
2708:"teleporter"
2712:"business card"
2716:"orb"
2720:"mirror"
2724:"strange book"
2728:"journal"

#2964
3032:(<2732>
3035:<2732> top of stack
3043:suspicious?
3047:<<2732>> = name of location string addr
3060:r0 = <2732>
3062:<2732> top of stack
3064:(<2732>+1
3068:(<<2732>+1>
3071:(<<2732>+1>, <<<2732>+1>>
3074:(<<2732>+1>, 
3078:IF <<<2732>+1>> != 2
3081:{
3091:}
3104:ENDIF
3108:r0 = <2732>
3110:<2732> top of stack
3114:r0=num_items
3121:{
3123:"Things of interest here" address
3126:address of print_xor(x, ,y)
3129:key
3135:}
3148:r0 = <2732>
3150:r0=<2732>+2
3157:r0=<<<2732>+2>>
3160:r0 = num_exits

3825:Chiseled on the wall of.....
3852:////////

4246:As you enter the room, the symbol on the floor briefly flashes
4256:. The orb begins subtly glowing 

4560:the number on the vault door flashes black

#use_tablet
4740:(28369,1531,2148)
4761:(4242,25866,32767,28397)
4778:(28401,1531,12513)

4907:You light your lantern
4953:You douse your lantern

#use_coin
4997:You're not sure what to do with the coin.

5078:You place the 

5460:"Unusual setting detected...

5504:You wake up on a sandy beach...

5611:You activate the teleporter...

#5823
5825:count and return how many of vector
5827:starting 27381 have <2732> = <x+2>
5833:(27381,5846,0)


#5846
5850:(a,b,c,<2732>)
5853:(a,b,c,<2732>,a+2)
5857:(a,b,c,<2732>,<a+2>)
5860:(a,b,c,<2732>=<a+2>,<a+2>)
5864:if <2732>!=<a+2> return noop
5867:(a,b,c+1,<2732>=<a+2>,<a+2>)
5871:return (a,b,c+1)

#5990
5994:(a+2,b)
5998:(<a+2>,b)
6001:if <a+2> = 0 return 1
6004:(<a+2>, <2732>)
6007:(<a+2>,<a+2>=<2732>)
6011:if <a+2>=<2732> return 1
6014:return 0
6019:return 1


5883:print_string(<27381>) if r2 = <27383>

#5893
5895:(a,b,c,a+2)
5899:(a,b,c,rmem(a+2))
5902:(a,b,c,c=rmem(a+2))
5906:if c!=rmem(a+2) return NOOP
5909:!!! weird 
5913:(rmem(a),b,c,c=rmem(a+2))


#5921
5925:(a,b,a)
5928:(27381,b,a)
5931:(27381,5964,a)

#5964
5966:(a,c,c)
5969:!!! self modifying? why is this here?
5973:(rmem(a),c,c)


27381:item vector?
26900:vector of exit names from Foothills
26903:vector of exits ptrs Foothills
